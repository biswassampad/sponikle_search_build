{"version":3,"sources":["stateProvider.js","reducer.js","components/Search.js","pages/Home.js","SearchEngine.js","keys.js","pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","Home","to","SearchEngine","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","src","alt","title","displayLink","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6bfd25f3.chunk.js","sourcesContent":["import React, {createContext,useContext,useReducer} from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({\r\n    reducer,initialState,children\r\n})=>\r\n<StateContext.Provider value={useReducer(reducer,initialState)}>{children}</StateContext.Provider>\r\n\r\nexport const useStateValue = () => useContext(StateContext);","export const initialState = {\r\n    term : null\r\n}\r\n\r\nexport const actionTypes = {\r\n    SET_SEARCH_TERM : \"SET_SEARCH_TERM\"\r\n}\r\n\r\nconst reducer = (state,action) => {\r\n    console.log(action);\r\n    switch(action.type){\r\n        case actionTypes.SET_SEARCH_TERM:\r\n            return {\r\n                ...state,\r\n                term:action.term\r\n            };\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React,{useState} from 'react'\r\nimport './Search.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Button} from '@material-ui/core';\r\nimport {useStateValue} from '../stateProvider';\r\nimport {actionTypes} from \"../reducer\";\r\n\r\nfunction Search({hideButtons = false,value}) {\r\n    const [{},dispatch] = useStateValue();\r\n    const [input,setInput] = useState(\"\");\r\n    const history = useHistory();\r\n    const search = e => {\r\n        e.preventDefault()\r\n        console.log('search query',input);\r\n\r\n        dispatch({\r\n            type:actionTypes.SET_SEARCH_TERM,\r\n            term:input\r\n        })\r\n\r\n        history.push('/search');\r\n    }\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"search__input\">\r\n                <SearchIcon className='search__inputIcon' />\r\n                    <input value={input} onChange={e=>setInput(e.target.value)} value={value} placeholder=\"What's in your mind today....\"/>\r\n            </div>\r\n            {!hideButtons ? (\r\n                \r\n            <div className=\"search__buttons\">\r\n            <Button type=\"submit\" onClick={search}>Search</Button>\r\n        </div>\r\n            ):(\r\n              <div className=\"search__buttonsHidden\">\r\n            <Button type=\"submit\" onClick={search}>Search</Button>\r\n        </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\r\nimport './Home.css';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Search from '../components/Search';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home_header\">\r\n                <div className=\"home_headerleft\">\r\n                <Link to=\"/about\">About</Link>\r\n                <Link to=\"/apps\">Apps</Link>\r\n                </div>\r\n                <div className=\"home_headerright\">\r\n                <Link to=\"/email\">Email</Link>\r\n                <Link to=\"/images\">Images</Link>\r\n                {/*Icon*/}\r\n                {/*Avatar*/}\r\n                </div>\r\n            </div>\r\n            <div className=\"home_body\">\r\n                <div className=\"home_inputContainer\">\r\n                    <h1>Sponikle</h1>\r\n                    <Search></Search>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import {useState,useEffect} from 'react';\r\n\r\nimport API_KEY from './keys';\r\n\r\nconst CONTEXT_KEY = \"7bcb9fa7f5880d033\";\r\n\r\n\r\nconst SearchEngine = (term) => {\r\n    console.log('term',term)\r\n    const [data,setData] = useState(null);\r\n\r\n    useEffect(()=>{\r\n\r\n        const fetchData = async()=>{\r\n            fetch(\r\n                `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n            ).then(response => response.json())\r\n            .then(result=>{\r\n                setData(result)\r\n            })\r\n        }\r\n        fetchData();\r\n    },[term])\r\n    return {data}\r\n};\r\n\r\nexport default SearchEngine\r\n","export const API_KEY = \"AIzaSyA8PXOMqnyk0OhEbvVUHncyE2Crd5SycWk\";\r\n\r\nexport default API_KEY;","import React from 'react'\r\nimport './searchPage.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {useStateValue} from \"../stateProvider\";\r\nimport SearchEngine from \"../SearchEngine\";\r\nimport Search from \"../components/Search\";\r\n// import Response from './response';\r\n\r\nfunction SearchPage() {\r\n    const [{ term },dispatch] = useStateValue();\r\n\r\n    const {data} = SearchEngine(term);\r\n\r\n    // const data = Response\r\n    console.log(data);\r\n\r\n    return (\r\n        <div className=\"searchPage\">\r\n                <div className=\"search__pageHeader\">\r\n                    <Link to=\"/\"><h1 className=\"search__pageLogo\">Sponikle</h1></Link>\r\n                    <div className=\"searc__pageHeaderBody\">\r\n                    <Search hideButtons term/>\r\n                    <div className=\"search_pageOptions\">\r\n                        <div className=\"search_pageOptionsLeft\">\r\n                            <div className=\"search_pageOption\">\r\n                            <SearchIcon/>\r\n                            <Link to=\"/all\">All</Link>\r\n                            </div>\r\n                            <div className=\"search_pageOption\">\r\n                            <ImageIcon/>\r\n                            <Link to=\"/all\">Images</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"search_pageOptionsRight\">\r\n                        <div className=\"search_pageOption\">\r\n                            <Link to=\"/report\">Report Search</Link>\r\n                            </div>\r\n                            <div className=\"search_pageOption\">\r\n                            <Link to=\"/help\">Help</Link>\r\n                            </div>\r\n                            <div className=\"search_pageOption\">\r\n                            <Link to=\"/ratings\">Ratings</Link>\r\n                            </div>\r\n                            \r\n                            \r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    true     && (\r\n                        \r\n                    <div className=\"search_pageResults\">\r\n                            <p className=\"search_pageResultCount\">\r\n                    About {data?.searchInformation.formattedTotalResults} results ({data?.searchInformation.formattedSearchTime}) for {term} \r\n                                </p>    \r\n\r\n                            {data?.items.map(item=>(\r\n                                <div className=\"search_pageResult\">\r\n                                    <a href={item.link} className={\"searchPage_resultTitle\"}>\r\n                                        {item.pagemap ?.cse_image?.length > 0 && item.pagemap ?.cse_image[0]?.src &&(\r\n                                            <img src={item.pagemap ?.cse_image[0]?.src} alt=\"\" className=\"searchPage_resultImage\"/>\r\n                                        )}\r\n                                        <h2 className=\"SearchTitle\">{item.title}</h2></a>\r\n                            <a href={item.link} className={'searchPage_resultLink'}>{item.displayLink} 😊</a>\r\n                            <p className=\"searchPage_resultSnippet\">{item.snippet}</p>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                    )\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\n\n\nimport Home from './pages/Home';\nimport SearchPage from './pages/Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/search\">\n            <SearchPage/>\n          </Route>\n          <Route path=\"/\">\n            <Home/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './stateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n     <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}